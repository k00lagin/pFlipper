"use strict";(self["webpackChunkmy_flipper_net"]=self["webpackChunkmy_flipper_net"]||[]).push([[611],{6611:(t,e,s)=>{s.r(e),s.d(e,{default:()=>gt});var i=s(9835),n=s(1957);const l=(0,i._)("div",{class:"text-h6"},"Sub-GHz/Infrared pulse plotter",-1),h={key:0},o=(0,i.Uk)("Wrong file type. Only "),a=(0,i._)("b",null,"SubGhz RAW",-1),r=(0,i.Uk)(" and "),u=(0,i._)("b",null,"Infrared RAW",-1),p=(0,i.Uk)(" files are accepted."),d=[o,a,r,u,p],c={class:"pulseplot fit"},m=(0,i._)("canvas",{class:"pulseplot-canvas",style:{"image-rendering":"pixelated"}},null,-1),g={class:"flex q-py-sm"},f={class:"flex flex-center q-px-md"},b=(0,i._)("div",{class:"pulseplot-timings q-py-sm"},null,-1),w=(0,i._)("div",{class:"pulseplot-messages q-py-sm",style:{"word-break":"break-all"}},null,-1);function y(t,e,s,o,a,r){const u=(0,i.up)("q-icon"),p=(0,i.up)("q-file"),y=(0,i.up)("q-select"),x=(0,i.up)("q-input"),v=(0,i.up)("q-btn"),_=(0,i.up)("q-page");return(0,i.wg)(),(0,i.j4)(_,{class:"column items-center q-pa-md"},{default:(0,i.w5)((()=>[l,(0,i.Wm)(p,{outlined:"",modelValue:t.uploadedFile,"onUpdate:modelValue":e[0]||(e[0]=e=>t.uploadedFile=e),label:"Drop or select file",class:"q-py-md",style:{"min-width":"200px"}},{prepend:(0,i.w5)((()=>[(0,i.Wm)(u,{name:"file_upload"})])),_:1},8,["modelValue"]),t.flags.wrongFileType?((0,i.wg)(),(0,i.iD)("p",h,d)):(0,i.kq)("",!0),t.currentSignal?((0,i.wg)(),(0,i.j4)(y,{key:1,modelValue:t.currentSignal,"onUpdate:modelValue":e[1]||(e[1]=e=>t.currentSignal=e),options:t.signals,"option-label":"name",label:"Select signal",style:{"min-width":"200px"}},null,8,["modelValue","options"])):(0,i.kq)("",!0),(0,i.wy)((0,i._)("div",c,[m,(0,i.wy)((0,i._)("div",g,[(0,i.Wm)(y,{modelValue:t.slicer.modulation,"onUpdate:modelValue":e[2]||(e[2]=e=>t.slicer.modulation=e),options:t.slicerModulations,label:"Slicer",class:"q-px-sm",style:{width:"100px"}},null,8,["modelValue","options"]),(0,i.Wm)(x,{modelValue:t.slicer.short,"onUpdate:modelValue":e[3]||(e[3]=e=>t.slicer.short=e),modelModifiers:{number:!0},type:"number",label:"Short",class:"q-px-sm",style:{width:"100px"}},null,8,["modelValue"]),(0,i.Wm)(x,{modelValue:t.slicer.long,"onUpdate:modelValue":e[4]||(e[4]=e=>t.slicer.long=e),modelModifiers:{number:!0},type:"number",label:"Long",class:"q-px-sm",style:{}},null,8,["modelValue"]),(0,i.Wm)(x,{modelValue:t.slicer.sync,"onUpdate:modelValue":e[5]||(e[5]=e=>t.slicer.sync=e),modelModifiers:{number:!0},type:"number",label:"Sync",class:"q-px-sm",style:{}},null,8,["modelValue"]),(0,i.Wm)(x,{modelValue:t.slicer.gap,"onUpdate:modelValue":e[6]||(e[6]=e=>t.slicer.gap=e),modelModifiers:{number:!0},type:"number",label:"Gap",class:"q-px-sm",style:{"max-width":"200px"}},null,8,["modelValue"]),(0,i._)("div",f,[(0,i.Wm)(v,{onClick:t.setSlicer,label:"Submit",size:"16px"},null,8,["onClick"])])],512),[[n.F8,t.plot]]),b,w],512),[[n.F8,!t.flags.wrongFileType]])])),_:1})}s(702),s(8964),s(2809);var x=s(499);
/**
    Determine divisor and SI prefix.

    @author Christian W. Zuckschwerdt <zany@triq.net>
    @copyright Christian W. Zuckschwerdt, 2019
    @license
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.
*/
const v=[{name:"yotta",scale:1e24,prefix:"Y"},{name:"zetta",scale:1e21,prefix:"Z"},{name:"exa",scale:1e18,prefix:"E"},{name:"peta",scale:1e15,prefix:"P"},{name:"tera",scale:1e12,prefix:"T"},{name:"giga",scale:1e9,prefix:"G"},{name:"mega",scale:1e6,prefix:"M"},{name:"kilo",scale:1e3,prefix:"k"},{name:"",scale:1,prefix:""},{name:"milli",scale:.001,prefix:"m"},{name:"micro",scale:1e-6,prefix:"µ"},{name:"nano",scale:1e-9,prefix:"n"},{name:"pico",scale:1e-12,prefix:"p"},{name:"femto",scale:1e-15,prefix:"f"},{name:"atto",scale:1e-18,prefix:"a"},{name:"zepto",scale:1e-21,prefix:"z"},{name:"yocto",scale:1e-24,prefix:"y"}];function _(t,e=10){if(0===t)return v[8];t/=e;for(let s=0;s<v.length;++s)if(t>=v[s].scale)return v[s];return v[v.length-1]}const M=[{name:"year",scale:31557513,prefix:"Y"},{name:"month",scale:2635200,prefix:"M"},{name:"day",scale:86400,prefix:"D"},{name:"hour",scale:3600,prefix:"h"},{name:"minute",scale:60,prefix:"m"},{name:"second",scale:1,prefix:"s"},{name:"milli",scale:.001,prefix:"ms"},{name:"micro",scale:1e-6,prefix:"µs"},{name:"nano",scale:1e-9,prefix:"ns"},{name:"pico",scale:1e-12,prefix:"ps"},{name:"femto",scale:1e-15,prefix:"fs"},{name:"atto",scale:1e-18,prefix:"as"},{name:"zepto",scale:1e-21,prefix:"zs"},{name:"yocto",scale:1e-24,prefix:"ys"}];function k(t,e=10){if(0===t)return M[8];t/=e;for(let s=0;s<M.length;++s)if(t>=M[s].scale)return M[s];return M[M.length-1]}
/**
    @file Various utils.

    @author Christian W. Zuckschwerdt <zany@triq.net>
    @copyright Christian W. Zuckschwerdt, 2019
    @license
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.
*/
function S(t){return t&&"string"===typeof t?document.querySelector(t):t}function F(t,e){if(!e)return e;if("string"!==typeof e)return e;if(t[e])return t[e];const s=e.toLowerCase();for(const i in t)if(i.toLowerCase()===s)return t[i];for(const i in t)if(i.toLowerCase().startsWith(s))return t[i];return null}function D(t){const e=(new DOMParser).parseFromString(t,"text/html");return e.body.textContent||""}
/**
    @file DropZone JS.

    @author Christian W. Zuckschwerdt <zany@triq.net>
    @copyright Christian W. Zuckschwerdt, 2019
    @license
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.
*/
class P{constructor(t,e){t=t||"#dropZone",t=S(t),this.dropZone=t,this.fileLoader=e,this.inputEls=[],this.dragEnteredEls=[],window.addEventListener("dragenter",this),window.addEventListener("dragleave",this),window.addEventListener("dropleave",this);const s=["dragenter","dragover","dragleave","drop"];s.forEach((t=>this.dropZone.addEventListener(t,this,!1)))}addInput(t){t=t||"#inputfile",t=S(t),t.addEventListener("change",this,!1),this.inputEls.push(t)}destroy(){window.removeEventListener("dragenter",this,!1),window.removeEventListener("dragleave",this,!1),window.removeEventListener("dropleave",this,!1);const t=["dragenter","dragover","dragleave","drop"];t.forEach((t=>this.dropZone.removeEventListener(t,this,!1)));for(const e of this.inputEls)e.removeEventListener("change",this,!1)}allowDrag(t){t.dataTransfer.dropEffect="copy",t.preventDefault()}handleDrop(t){t.preventDefault(),this.handleFileSelect(t)}handleFileSelect(t){t.stopPropagation(),t.preventDefault();const e="dataTransfer"in t?t.dataTransfer.files:t.target.files;for(let s,i=0;s=e[i];i++){const t=new FileReader;t.onload=t=>{s.fileBuffer=t.target.result,this.fileLoader(s)},t.readAsArrayBuffer(s)}}handleEvent(t){const e=t.type;if("function"===typeof this[e])return t.preventDefault(),this[e](t)}dragenter(t){this.dragEnteredEls.push(t.target),document.documentElement.classList.add("dragdrop"),this.dropZone.classList.add("active")}dragover(t){this.dropZone.classList.add("hover"),this.allowDrag(t)}dragleave(t){const e=this.dragEnteredEls.indexOf(t.target);e>-1&&this.dragEnteredEls.splice(e,1),this.dragEnteredEls.indexOf(this.dropZone)<0&&this.dropZone.classList.remove("hover"),0===this.dragEnteredEls.length&&(document.documentElement.classList.remove("dragdrop"),this.dropZone.classList.remove("active"))}dropleave(){this.dragEnteredEls.splice(0),this.dropZone.classList.remove("hover"),this.dropZone.classList.remove("active"),document.documentElement.classList.remove("dragdrop")}drop(t){const e=new Event("dropleave");window.dispatchEvent(e),this.handleDrop(t)}change(t){this.handleFileSelect(t)}}
/**
    @file Hexbuffer JS.

    @author Christian W. Zuckschwerdt <zany@triq.net>
    @copyright Christian W. Zuckschwerdt, 2020
    @license
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.
*/
function W(t,e=2){return(t+65536).toString(16).substr(-e).toUpperCase()}class B{constructor(t=""){this.fromString(t)}fromString(t){this.line=t.replace(/\s/g,""),this.index=0}hasNibble(){return this.index+1<=this.line.length}hasByte(){return this.index+2<=this.line.length}hasWord(){return this.index+4<=this.line.length}peekNibble(){return parseInt(this.line.substr(this.index,1),16)}peekByte(){return parseInt(this.line.substr(this.index,2),16)}peekWord(){return parseInt(this.line.substr(this.index,4),16)}getNibble(){const t=parseInt(this.line.substr(this.index,1),16);return this.index+=1,t}getByte(){const t=parseInt(this.line.substr(this.index,2),16);return this.index+=2,t}getWord(){const t=parseInt(this.line.substr(this.index,4),16);return this.index+=4,t}pushNibble(t){this.line+=W(t,1)}pushByte(t){this.line+=W(t,2)}pushWord(t){this.line+=W(t,4)}}
/**
    @file Histogram JS.

    @author Christian W. Zuckschwerdt <zany@triq.net>
    @copyright Christian W. Zuckschwerdt, 2020
    @license
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.
*/
const L=16;class T{constructor(t){"undefined"!==typeof t?(this.count=1,this.sum=t,this.mean=t,this.devi=0,this.min=t,this.max=t):(this.count=0,this.sum=0,this.mean=null,this.devi=0,this.min=null,this.max=null)}add(t){this.count++,this.sum+=t,this.mean=this.sum/this.count,this.min=null===this.min?t:Math.min(t,this.min),this.max=null===this.max?t:Math.max(t,this.max),this.devi=(this.max-this.min)/2}fuse(t){this.count+=t.count,this.sum+=t.sum,this.mean=this.sum/this.count,this.min=Math.min(this.min,t.min),this.max=Math.max(this.max,t.max),this.devi=(this.max-this.min)/2}contains(t){return t>=this.min&&t<=this.max}}class C{constructor(t,e=.2){this.bins=[],this.histogram_sum(t,e)}get length(){return this.bins.length}histogram_sum(t,e=.2){const s=t.length;for(let i=0;i<s;++i){let s;for(s=0;s<this.bins.length;++s){const n=t[i],l=this.bins[s].mean;if(Math.abs(n-l)<e*Math.max(n,l)){this.bins[s].add(t[i]);break}}s===this.bins.length&&s<L&&this.bins.push(new T(t[i]))}}delete_bin(t){this.bins.splice(t,1)}swap_bins(t,e){if(t<this.bins.length&&e<this.bins.length){const s=this.bins[t];this.bins[t]=this.bins[e],this.bins[e]=s}}sort_mean(){if(!(this.bins.length<2))for(let t=0;t<this.bins.length-1;++t)for(let e=t+1;e<this.bins.length;++e)this.bins[e].mean<this.bins[t].mean&&this.swap_bins(e,t)}sort_count(){if(!(this.bins.length<2))for(let t=0;t<this.bins.length-1;++t)for(let e=t+1;e<this.bins.length;++e)this.bins[e].count<this.bins[t].count&&this.swap_bins(e,t)}fuse_bins(t=.2){if(!(this.bins.length<2))for(let e=0;e<this.bins.length-1;++e)for(let s=e+1;s<this.bins.length;++s){const i=this.bins[e].mean,n=this.bins[s].mean;Math.abs(i-n)<t*Math.max(i,n)&&(this.bins[e].fuse(this.bins[s]),this.delete_bin(s),s--)}}trim_bins(t=0){for(let e=0;e<this.bins.length;++e)this.bins[e].mean<=t&&this.delete_bin(e)}find_bin_index(t){for(let e=0;e<this.bins.length;++e)if(this.bins[e].contains(t))return e;return-1}console_print(){for(let t=0;t<this.bins.length;++t){const e=this.bins[t];console.log(`[${t}] ${e.count} × ${e.mean.toFixed(1)} ±${e.devi.toFixed(1)} µs [${e.min};${e.max}]`)}}string_print(t=", "){const e=[];for(let s=0;s<this.bins.length;++s){const t=this.bins[s];e.push(`${t.count}× ${t.mean.toFixed(1)} <small>±${t.devi.toFixed(1)}</small> µs`)}return e.join(t)}}class E{constructor(t,e=.2){this.analyse_pulses(t,e),this.create_rfraw(t)}analyse_pulses(t,e,s=.2){this.pulses=[],this.gaps=[],this.periods=[],this.pulse_sum=0,this.gap_sum=0;for(let n=0;n<t.length-2;n+=2){const e=t[n],s=t[n+1];this.pulses.push(e),this.gaps.push(s),this.periods.push(e+s),this.pulse_sum+=e,this.gap_sum+=s}const i=t[t.length-2];this.pulses.push(i),this.pulse_sum+=i,this.pulse_gap_ratio=this.pulse_sum/this.gap_sum,this.pulse_gap_skew=this.pulse_gap_ratio-1,this.hist_pulses=new C(this.pulses,s),this.hist_gaps=new C(this.gaps,s),this.hist_periods=new C(this.periods,s),this.hist_timings=new C(t,s),this.hist_pulses.trim_bins(s),this.hist_gaps.trim_bins(s),this.hist_periods.trim_bins(s),this.hist_timings.trim_bins(s),this.hist_pulses.fuse_bins(s),this.hist_gaps.fuse_bins(s),this.hist_periods.fuse_bins(s),this.hist_timings.fuse_bins(s)}guess(){const t=this.hist_pulses,e=this.hist_gaps,s=this.hist_periods;if(t.sort_mean(),e.sort_mean(),t.bins.length>0&&0===t.bins[0].mean&&t.delete_bin(0),1===this.pulses.length)return{name:"Single pulse detected. Probably Frequency Shift Keying or just noise..."};if(1===t.length&&1===e.length)return{name:"Un-modulated signal. Maybe a preamble..."};if(1===t.length&&e.length>1)return{name:"Pulse Position Modulation with fixed pulse width",modulation:"PPM",short:e.bins[0].mean,long:e.bins[1].mean,gap:1.2*e.bins[1].max,reset:1.2*e.bins[e.length-1].max};if(2===t.length&&1===e.length){const s=t.bins[0].mean,i=t.bins[1].mean;return{name:"Pulse Width Modulation with fixed gap",modulation:"PWM",short:s,long:i,tolerance:.4*(i-s),reset:1.2*e.bins[e.length-1].max}}if(2===t.length&&2===e.length&&1===s.length){const s=t.bins[0].mean,i=t.bins[1].mean;return{name:"Pulse Width Modulation with fixed period",modulation:"PWM",short:s,long:i,tolerance:.4*(i-s),reset:1.2*e.bins[e.length-1].max}}if(2===t.length&&2===e.length&&3===s.length){const s=t.bins[0].mean;return{name:"Manchester coding (PCM)",modulation:"MC",short:s,long:s,reset:1.2*e.bins[e.length-1].max}}if(2===t.length&&e.length>=3){const s=t.bins[0].mean,i=t.bins[1].mean;return{name:"Pulse Width Modulation with multiple packets",modulation:"PWM",short:s,long:i,gap:1.2*e.bins[1].max,tolerance:.4*(i-s),reset:1.2*e.bins[e.length-1].max}}if(t.length>=3&&e.length>=3&&Math.abs(t.bins[1].mean-2*t.bins[0].mean)<=t.bins[0].mean/8&&Math.abs(t.bins[2].mean-3*t.bins[0].mean)<=t.bins[0].mean/8&&Math.abs(e.bins[0].mean-t.bins[0].mean)<=t.bins[0].mean/8&&Math.abs(e.bins[1].mean-2*t.bins[0].mean)<=t.bins[0].mean/8&&Math.abs(e.bins[2].mean-3*t.bins[0].mean)<=t.bins[0].mean/8)return{name:"Pulse Code Modulation (Not Return to Zero)",modulation:"PCM",short:t.bins[0].mean,long:t.bins[0].mean,reset:1024*t.bins[0].mean};if(3===t.length){t.sort_count();const s=t.bins[1].mean,i=t.bins[2].mean,n=s<i?s:i,l=s<i?i:s;return{name:"Pulse Width Modulation with sync/delimiter",modulation:"PWM",short:n,long:l,sync:t.bins[0].mean,reset:1.2*e.bins[e.length-1].max}}return{name:"No clue..."}}create_rfraw(t){const e=this.hist_timings;if(e.bins.length<1)return"";if(e.bins.length>8)return"";if(t.length>494)return"";const s=new B;for(const l of e.bins)s.pushWord(l.mean);for(let l=0;l<t.length-1;l+=2){const i=t[l],n=t[l+1],h=e.find_bin_index(i),o=e.find_bin_index(n);s.pushNibble(8|h),s.pushNibble(o)}s.pushByte(85);const i=new B;i.pushByte(170),i.pushByte(176),i.pushByte(2+s.line.length/2-1),i.pushByte(e.bins.length),i.pushByte(1);const n=new B;n.pushByte(170),n.pushByte(177),n.pushByte(e.bins.length),this.rfrawB0=i.line+s.line,this.rfrawB1=n.line+s.line}console_log(){const t=this.guess();console.log("Analyzing pulses..."),console.log(`Total count: ${this.pulses.length}`),console.log("Pulse width distribution:"),this.hist_pulses.console_print(),console.log("Gap width distribution:"),this.hist_gaps.console_print(),console.log("Pulse period distribution:"),this.hist_periods.console_print(),console.log("Pulse timing distribution:"),this.hist_timings.console_print(),console.log(`DC bias (Pulse/Gap skew): ${(100*this.pulse_gap_skew).toFixed(1)}`),console.log("Guessing modulation:"),console.log(t)}print_plain(t){const e=this.guess();t.innerHTML=`\n        <div>Pulses: ${this.hist_pulses.string_print()}</div>\n        <div>Gaps: ${this.hist_gaps.string_print()}</div>\n        <div>Periods: ${this.hist_periods.string_print()}</div>\n        <div>Timings: ${this.hist_timings.string_print()}</div>\n        <div>${e.name}</div>\n        `}print(t,e){const s=this.guess();t&&(t.innerHTML=`<table>\n            <tr><th>Pulses</th><td>${this.hist_pulses.string_print("</td><td>")}</td></tr>\n            <tr><th>Gaps</th><td>${this.hist_gaps.string_print("</td><td>")}</td></tr>\n            <tr><th>Periods</th><td>${this.hist_periods.string_print("</td><td>")}</td></tr>\n            <tr><th>Timings</th><td>${this.hist_timings.string_print("</td><td>")}</td></tr>\n            </table>\n            `),e&&(e.innerHTML=`\n            <div><small>DC bias (Pulse/Gap skew): ${(100*this.pulse_gap_skew).toFixed(1)}%</small><br>\n            Guessing modulation: <strong>${s.name}</strong><br>\n            modulation: <strong>${s.modulation||"unknown"}</strong>\n            short: <strong>${s.short?s.short.toFixed(1):"-"}</strong>\n            long: <strong>${s.long?s.long.toFixed(1):"-"}</strong>\n            sync: <strong>${s.sync?s.sync.toFixed(1):"-"}</strong>\n            gap: <strong>${s.gap?s.gap.toFixed(1):"-"}</strong>\n            reset: <strong>${s.reset?s.reset.toFixed(1):"-"}</strong><br>\n            <small>RfRaw (rx): <strong>${this.rfrawB1?this.rfrawB1:"-"}</strong></small><br>\n            <small>RfRaw (tx): <strong>${this.rfrawB0?this.rfrawB0:"-"}</strong></small>\n            </div>\n            `)}}
/**
    @file Bitbuffer JS.

    @author Christian W. Zuckschwerdt <zany@triq.net>
    @copyright Christian W. Zuckschwerdt, 2020
    @license
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.
*/
class Z{constructor(t=[],e=0){Array.isArray(t)?(this.bytes=t,this.len=e||8*t.length):this.fromString(t)}fromString(t){this.bytes=[],this.len=0;let e=-1;if(t=t.trim(),t.startsWith("{")){const s=t.indexOf("}");if(s<0)return;e=parseInt(t.slice(1),10),t=t.slice(s+1)}t.startsWith("0x")&&(t=t.slice(2));for(const s of t){const t=parseInt(s,16);this.pushNibble(t)}e>=0&&(this.len=e)}pushZero(){this.push(0)}pushOne(){this.push(1)}pushSymbol(t){"0"===t?this.push(0):"1"===t&&this.push(1)}push(t){t=t?128:0,this.bytes[~~(this.len/8)]|=t>>this.len%8,this.len+=1}pushNibble(t){for(let e=3;e>=0;--e)this.push(t>>e&1)}pushByte(t){for(let e=7;e>=0;--e)this.push(t>>e&1)}pushBreak(){const t=~~((this.len+7)/8);this.bytes[t]=-1,this.len=8*(t+1)}toBitArray(){const t=[];for(let e=0;e<this.len;++e){const s=this.bytes[~~(e/8)]||0,i=s>>7-e%8&1;t.push(i)}return t}toHexString(){let t=`{${this.len}}`;for(let e=0;e<this.len;e+=8){const s=this.bytes[~~(e/8)]||0;s<0?t+=" / ":(t+=" ",t+=(s>>4).toString(16).toUpperCase(),e+4<this.len&&(t+=(15&s).toString(16).toUpperCase()))}return t}}
/**
    @file Pulse Slicer JS.

    @author Christian W. Zuckschwerdt <zany@triq.net>
    @copyright Christian W. Zuckschwerdt, 2020
    @license
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.
*/
function z(t,e){return"PCM"===e.modulation?H(t,e):"MC"===e.modulation?q(t,e):"PPM"===e.modulation?O(t,e):"PWM"===e.modulation?R(t,e):"DM"===e.modulation?A(t,e):"NRZI"===e.modulation?X(t,e):"CMI"===e.modulation?V(t,e):"PIWM"===e.modulation?U(t,e):[]}function H(t,e){return e.long&&e.long!==e.short?$(t,e):I(t,e)}function I(t,e){const s=e.short,i=e.gap,n=new Z,l=[];let h=0;for(let o=0;o<t.length;o+=1){const e=1-o%2,a=t[o];if(i&&a>i)n.pushBreak();else{const t=~~(a/s+.5);for(let s=0;s<t;++s)l.push([h+a/t*s,h+a/t*(s+1),e]),n.push(e)}h+=a}return{hints:l,bits:n}}function $(t,e){const s=e.short,i=e.long,n=e.gap,l=.5*s,h=1.5*s,o=new Z,a=[];let r=0;for(let u=0;u<t.length;u+=2){const e=t[u],p=t[u+1];if(e<l||e>h){o.pushBreak(),r+=e+p;continue}let d=e*i/s,c=p+e-d;if(c<i/2&&(d=e+p,c=0),a.push([r,r+d,"1"]),o.pushOne(),r+=d,n&&p>n){o.pushBreak(),r+=c;continue}const m=~~(c/i+.5);for(let t=0;t<m;++t)a.push([r+c*t/m,r+c*(t+1)/m,"0"]),o.pushZero();r+=c}return{hints:a,bits:o}}function O(t,e){const s=e.short,i=e.long,n=e.sync,l=e.gap,h=.5*s,o=1.5*s,a=.5*i,r=1.5*i,u=.5*n,p=1.5*n,d=new Z,c=[];let m=0;for(let g=0;g<t.length;g+=2){const e=t[g],s=t[g+1],i=m;m+=e+s,s>h&&s<o?(c.push([i,m,"1"]),d.pushOne()):s>a&&s<r?(c.push([i,m,"0"]),d.pushZero()):s>u&&s<p?(c.push([i,m,"X"]),d.pushBreak()):l&&s>l&&d.pushBreak()}return{hints:c,bits:d}}function R(t,e){const s=e.short,i=e.long,n=e.sync,l=e.gap,h=.5*s,o=1.5*s,a=.5*i,r=1.5*i,u=.5*n,p=1.5*n,d=new Z,c=[];let m=0;for(let g=0;g<t.length;g+=2){const e=t[g],s=t[g+1],i=m;let n=m+e+s;s>l&&(n=m+e+l),m+=e+s,e>h&&e<o?(c.push([i,n,"1"]),d.pushOne()):e>a&&e<r?(c.push([i,n,"0"]),d.pushZero()):e>u&&e<p&&(c.push([i,n,"X"]),d.pushBreak()),l&&s>l&&d.pushBreak()}return{hints:c,bits:d}}function N(t,e,s){for(let i=e;i<t.length;i+=2){const e=t[i],n=~~(e/s+.5);if(n>1)return 0;const l=t[i+1],h=~~(l/s+.5);if(h>1)return 1}return 0}function q(t,e){const s=e.short,i=new Z,n=[];let l=N(t,0,s),h=0,o=0;for(let a=0;a<t.length;a+=2){const e=t[a],r=~~(e/s+.5),u=t[a+1],p=~~(u/s+.5);1===r?(l?o=h:(n.push([o,h+e,"0"]),i.pushZero(),o=h+e),l=!l):2===r?(l?(i.pushBreak(),o=h+e/2):(n.push([o,h+e/2,"0"]),i.pushZero(),o=h+e/2),l=!1):r>2&&(l||(n.push([o,h+e/r,"0"]),i.pushZero()),o=h+e-e/r,i.pushBreak(),l=N(t,a+1,s)),1===p?(l?o=h+e:(n.push([o,h+e+u,"1"]),i.pushOne(),o=h+e+u),l=!l):2===p?(l?(i.pushBreak(),o=h+e+u/2):(n.push([o,h+e+u/2,"1"]),i.pushOne(),o=h+e+u/2),l=!1):p>2&&(l||(n.push([o,h+e+u/p,"1"]),i.pushOne()),o=h+e+u-u/p,i.pushBreak(),l=N(t,a+1,s)),h+=e+u}return{hints:n,bits:i}}function A(t,e){const s=e.short,i=new Z,n=[];let l=0,h=null;for(let o=0;o<t.length;o+=2){const e=t[o],a=~~(e/s+.5),r=t[o+1],u=~~(r/s+.5);h||1!==a||1!==u?1===a&&1===u?(n.push([h,l+e,"0"]),i.pushZero(),h=l+e):h&&1===a&&2===u?(n.push([h,l+e,"0"]),i.pushZero(),n.push([l+e,l+e+r,"1"]),i.pushOne(),h=null):2===a&&1===u?(n.push([l,l+e,"1"]),i.pushOne(),h=l+e):2===a&&2===u?(n.push([l,l+e,"1"]),i.pushOne(),n.push([l+e,l+e+r,"1"]),i.pushOne()):h||1!==a?h||2!==a?(h&&(n.push([h,h+2*s,"0"]),i.pushZero()),h=null,i.pushBreak()):(n.push([l,l+e,"1"]),i.pushOne(),i.pushBreak()):(n.push([l,l+e+s,"0"]),i.pushZero(),i.pushBreak()):(n.push([l,l+e+r,"0"]),i.pushZero()),l+=e+r}return{hints:n,bits:i}}function X(t,e){const s=e.short,i=new Z,n=[];let l=0,h=0;for(let o=0;o<t.length;o+=1){const e=t[o],a=~~(e/s+.5);h&&(n.push([h,l+s/2,"1"]),i.pushOne()),h=l+s/2;for(let t=1;t<a;++t)n.push([h,h+e/a,"0"]),i.pushZero(),h+=e/a;l+=e}return{hints:n,bits:i}}function V(t,e){const s=e.short,i=new Z,n=[];let l=0,h=null;for(let o=0;o<t.length;o+=2){const e=t[o],a=~~(e/s+.5),r=t[o+1],u=~~(r/s+.5);1===a&&1===u?(h||(h=l-e),n.push([h,l+e,"0"]),i.pushZero(),h=l+e):1===a&&2===u?(h||(h=l-e),n.push([h,l+e,"0"]),i.pushZero(),h=l+e+r,n.push([l+e,h,"1"]),i.pushOne()):1===a&&3===u?(h||(h=l-e),n.push([h,l+e,"0"]),i.pushZero(),h=l+e+2*r/3,n.push([l+e,h,"1"]),i.pushOne()):2===a&&1===u?(n.push([h,l+e,"1"]),i.pushOne(),h=l+e):2===a&&2===u?(n.push([h,l+e,"1"]),i.pushOne(),h=l+e+r,n.push([l+e,h,"1"]),i.pushOne()):2===a&&3===u?(n.push([h,l+e,"1"]),i.pushOne(),h=l+e+2*r/3,n.push([l+e,h,"1"]),i.pushOne()):3===a&&1===u?(n.push([h,l+e/3,"0"]),i.pushZero(),n.push([l+e/3,l+e,"1"]),i.pushOne(),h=l+e):3===a&&2===u?(n.push([h,l+e/3,"0"]),i.pushZero(),n.push([l+e/3,l+e,"1"]),i.pushOne(),h=l+e+r,n.push([l+e,h,"1"]),i.pushOne()):3===a&&3===u?(n.push([h,l+e/3,"0"]),i.pushZero(),n.push([l,l+e/3,"1"]),i.pushOne(),n.push([l+e/3,l+e,"1"]),i.pushOne(),n.push([l+e,l+e+3*r/2,"1"]),i.pushOne(),h=l+e+3*r/2):1===a?(n.push([h,l+e,"0"]),i.pushZero(),i.pushBreak(),h=l+e):2===a?(n.push([h,l+e,"1"]),i.pushOne(),i.pushBreak(),h=l+e):i.pushBreak(),l+=e+r}return{hints:n,bits:i}}function U(t,e){const s=e.short,i=new Z,n=[];let l=0;for(let h=0;h<t.length;h+=1){const e=t[h],o=~~(e/s+.5);1===o?(n.push([l,l+e,"1"]),i.pushOne()):2===o?(n.push([l,l+e,"0"]),i.pushZero()):i.pushBreak(),l+=e}return{hints:n,bits:i}}
/**
    @file Pulse Builder JS.

    @author Christian W. Zuckschwerdt <zany@triq.net>
    @copyright Christian W. Zuckschwerdt, 2020
    @license
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.
*/
function G(t){if(Array.isArray(t))return t;const e=t.split(/\D/).map((t=>parseInt(t,10)));return e}class j{constructor(t){Object.assign(this,t),this.build()}build(){this.pulses=[],this.warmup_raw&&this.addRaw(this,this.warmup_raw);const t=this.repeat||1;for(let e=0;e<t;++e){if(this.gap&&e>0&&(this.pulses.push(0),this.pulses.push(this.gap)),this.preamble){const t=new Z(this.preamble);this.addCode(this,t)}if(this.preamble_raw&&this.addRaw(this,this.preamble_raw),this.sync_raw&&this.addRaw(this,this.sync_raw),this.syncword){const t=new Z(this.syncword);this.addCode(this,t)}const t=new Z(this.payload);if(this.addCode(this,t),this.postamble){const t=new Z(this.postamble);this.addCode(this,t)}this.postamble_raw&&this.addRaw(this,this.postamble_raw)}return this.coalesce(),this.jitter&&this.addJitter(this),this}addCode(t,e){return"PCM"===t.modulation?this.buildPCM(t,e):"MC"===t.modulation?this.buildMC(t,e):"PPM"===t.modulation?this.buildPPM(t,e):"PWM"===t.modulation?this.buildPWM(t,e):"DM"===t.modulation?this.buildDM(t,e):"NRZI"===t.modulation?this.buildNRZI(t,e):"CMI"===t.modulation?this.buildCMI(t,e):"PIWM"===t.modulation?this.buildPIWM(t,e):console.log("Unknown modulation!"),t}addRaw(t,e){return e=G(e),e.length%2&&e.push(0),t.pulses=t.pulses.concat(e),t}coalesce(){const t=[];let e=0;for(let s=0;s<this.pulses.length;s+=2){const i=this.pulses[s]||0,n=this.pulses[s+1]||0;(i||n)&&(e||i||!t.length?n?(t.push(~~(i+e)),t.push(~~n),e=0):e+=i:t[t.length-1]+=~~n)}return e&&(t.push(~~e),t.push(0)),this.pulses=t,this}addJitter(t){const e=t.jitter,s=[];for(let i=0;i<t.pulses.length;++i){const n=t.pulses[i];if(0===n)s.push(n);else if(e<1){const t=2*Math.random()*e+1-e;s.push(~~(n*t))}else{const t=2*Math.random()*e-e;s.push(~~(n+t))}}return t.pulses=s,t}buildPCM(t,e){return t.long&&t.long!==t.short?this.buildRZ(t,e):this.buildNRZ(t,e)}buildNRZ(t,e){const s=t.short,i=t.pulses,n=e.toBitArray();for(let l=0;l<n.length;++l)n[l]?(i.push(s),i.push(0)):(i.push(0),i.push(s));return t}buildRZ(t,e){const s=t.short,i=t.long,n=i-s,l=t.pulses,h=e.toBitArray();for(let o=0;o<h.length;++o)h[o]?(l.push(s),l.push(n)):(l.push(0),l.push(i));return t}buildPPM(t,e){const s=t.pulse||~~(t.short/3),i=t.short,n=t.long,l=t.pulses,h=e.toBitArray();for(let o=0;o<h.length;++o)l.push(s),h[o]?l.push(i):l.push(n);return t}buildPWM(t,e){const s=t.short,i=t.long,n=t.short_gap||t.long,l=t.long_gap||t.short,h=t.pulses,o=e.toBitArray();for(let a=0;a<o.length;++a)o[a]?(h.push(s),h.push(n)):(h.push(i),h.push(l));return t}buildMC(t,e){const s=t.short,i=t.pulses,n=e.toBitArray();for(let l=0;l<n.length;++l)n[l]?(i.push(s),i.push(s)):(i.push(0),i.push(s),i.push(s),i.push(0));return t}buildDM(t,e){const s=t.short,i=t.pulses,n=e.toBitArray();let l=!1;for(let h=0;h<n.length;++h){const t=n[h];t||l?!t&&l?(i.push(0),i.push(s),i.push(s),i.push(0)):t&&!l?(i.push(2*s),i.push(0),l=!l):t&&l&&(i.push(0),i.push(2*s),l=!l):(i.push(s),i.push(s))}return t}buildNRZI(t,e){const s=t.short,i=t.pulses,n=e.toBitArray();let l=!n[0];for(let h=0;h<n.length;++h)n[h]&&(l=!l),l?(i.push(s),i.push(0)):(i.push(0),i.push(s));return t}buildCMI(t,e){const s=t.short,i=t.pulses,n=e.toBitArray();let l=!1;for(let h=0;h<n.length;++h)n[h]?l?(i.push(0),i.push(2*s),l=!l):(i.push(2*s),i.push(0),l=!l):(i.push(0),i.push(s),i.push(s),i.push(0));return t}buildPIWM(t,e){const s=t.short,i=t.pulses,n=e.toBitArray();for(let l=0;l<n.length;++l)n[l]?i.push(s):i.push(2*s);return n.length%2&&i.push(3*s),t}}s(5583);
/**
    @file RfRaw JS.

    @author Christian W. Zuckschwerdt <zany@triq.net>
    @copyright Christian W. Zuckschwerdt, 2020
    @license
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.
*/
class Y{static isRfRaw(t){return t.trim().startsWith("AA")}static getPulses(t){let e=[];t=t.replace(/5\s*5[+\s]+A\s*A\s*B/g,"55;AAB");const s=t.split(";");for(const i of s){const t=Y.getCodePulses(i);e=e.concat(t)}return e}static getCodePulses(t){console.log("parsing rfraw data: ",t);const e=[],s=new B(t),i=s.getByte();if(170!==i)return e;const n=s.getByte();let l,h,o;if(177===n)h=s.getByte();else{if(176!==n)return e;l=s.getByte(),h=s.getByte(),o=s.getByte()}const a=[];for(let d=0;d<h;++d)a[d]=s.getWord();console.log(`buckets: ${h} (len ${l} repeats ${o}): `,a);let r=!1;const u=s.index;while(s.hasNibble()){const t=s.getNibble();if(t>7){r=!0;break}}if(s.index=u,console.log("RfRaw v3 format: ",r),!r){e.push(0);while(s.hasNibble()){if(85===s.peekByte())break;const t=s.getNibble();if(t>h)break;e.push(a[t])}return e.push(0),o?new Array(o).fill(e).flat():e}let p=!0;while(s.hasNibble()){if(85===s.peekByte())break;const t=s.getNibble(),i=7&t;if(i>h)break;8&t?(p||e.push(0),e.push(a[i]),p=!1):(p&&e.push(0),e.push(a[i]),p=!0)}return p||e.push(0),o?new Array(o).fill(e).flat():e}}
/**
    @file Pulse Data Viewer JS.

    @author Christian W. Zuckschwerdt <zany@triq.net>
    @copyright Christian W. Zuckschwerdt, 2020
    @license
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 2 of the License, or
    (at your option) any later version.
*/
function Q(t){return new Promise(((e,s)=>{const i=new FileReader;i.onerror=()=>{s(i.error)},i.onload=()=>{e(i.result)},i.readAsText(t)}))}let K;window.File&&window.FileReader&&window.FileList&&window.Blob||alert("The File APIs are not fully supported in this browser."),window.addEventListener("resize",(function(){clearTimeout(K),K=setTimeout((function(){const t=new Event("debouncedResize");window.dispatchEvent(t)}),250)}),!1);const J={PCM:"PCM",PWM:"PWM",PPM:"PPM",MC:"MC",DM:"DM",NRZI:"NRZI",CMI:"CMI",PIWM:"PIWM"},tt={ManchesterGET:"Manchester-GET",ManchesterIEEE:"Manchester-IEEE",DifferentialManchester:"Differential-Manchester"},et=[{text:"off",value:""},{text:"PCM",value:"PCM"},{text:"PWM",value:"PWM"},{text:"PPM",value:"PPM"},{text:"MC",value:"MC"},{text:"DM",value:"DM"},{text:"NRZI",value:"NRZI"},{text:"CMI",value:"CMI"},{text:"PIWM",value:"PIWM"}],st=[{text:"off",value:""},{text:"Manchester G.E.Thomas",value:"ManchesterGET"},{text:"Manchester IEEE",value:"ManchesterIEEE"},{text:"Differential Manchester",value:"DifferentialManchester"}];class it{static get slicerOptions(){return et}static get codingOptions(){return st}constructor(t={}){this.constrain={histogram:t=>parseInt(t,10)||0,slicer:t=>F(J,t)||"",coding:t=>F(tt,t)||""};const e={width:0,scroll:0,zoom:1};this.setTheme(t.theme);const s=this.heightDefaults(t.height);t=Object.assign({},e,s,t),this.tag=Math.random().toString().substring(2),this.parent=S(t.parent),this.data=t.data||{},this.width=t.width||this.parent.clientWidth,this.height=t.height,this.yHi=t.yHi,this.yLo=t.yLo,this.yHintLo=t.yHintLo,this.yHintHi=t.yHintHi,this.yHintText=t.yHintText,this.scroll=t.scroll,this.zoom=t.zoom,this.slicer=t.slicer,this.renderInfo=t.renderInfo,this.opts=t,t.data&&this.setData(t.data,t.fileinfo),t.unlockable&&this.enableUnlockable(),t.scrollzoom&&this.enableScrollZoom(),window.ResizeObserver?(this.resizeObserver=new ResizeObserver((()=>{this.redrawCanvas()})),this.resizeObserver.observe(this.parent)):window.addEventListener("debouncedResize",this,!1)}setTheme(t){let e={hiStroke:"#3c3",hiFill:"rgba(51,204,51,0.1)",hiLine:3,hiDash:[],loStroke:"#c33",loFill:"rgba(204,204,204,0.1)",loLine:3,loDash:[],edgeStroke:"#ccc",edgeLine:1,edgeDash:[],textFill:"#666",dotFill:"#999",hintStroke:"#aaf",hintDash:[3,2],hintLine:1,hintAltStroke:"#f99",hintAltDash:[3,2],hintAltLine:3,hintFill:"#448",timeLabelFill:"#333",timeMinorFill:"#CCC",timeMajorFill:"#666",font:"10px sans-serif"};const s={dark:{hiStroke:"#b0b",hiFill:"rgba(191,0,191,0.2)",hiLine:3,hiDash:[],loStroke:"#27c",loFill:"rgba(102,102,102,0.2)",loLine:3,loDash:[],edgeStroke:"#555",edgeLine:1,edgeDash:[],textFill:"#ccc",dotFill:"#555",hintStroke:"#555",hintDash:[3,2],hintLine:1,hintAltStroke:"#c55",hintAltDash:[3,2],hintAltLine:3,hintFill:"#ccc",timeLabelFill:"#DDD",timeMinorFill:"#666",timeMajorFill:"#999",font:"10px sans-serif"}};return"string"===typeof t&&s[t]&&(e=s[t]),this.theme=Object.assign({},e,t),this.redrawCanvas()}heightDefaults(t=120){const e=parseInt(this.theme.font,10)||10,s=22+~~(t/10),i=1+~~(t/10),n={height:t,yHi:s+i,yLo:t-e-i,yHintLo:t-e,yHintHi:s,yHintText:t};return n}enableUnlockable(){if(this.unlockable)return;this.unlockable=!0;const t=this.canvasNode,e=["dblclick"];e.forEach((e=>t.addEventListener(e,this,!1)))}disableUnlockable(){if(!this.unlockable)return;this.unlockable=!1;const t=this.canvasNode,e=["dblclick"];e.forEach((e=>t.removeEventListener(e,this,!1)))}enableScrollZoom(){if(this.unlocked)return;this.unlocked=!0;const t=this.canvasNode;let e=["mousedown","mousemove","mouseup","wheel"];this.unlockable||e.push("dblclick"),"ontouchstart"in window&&(e=e.concat("touchstart","touchmove","touchend")),e.forEach((e=>t.addEventListener(e,this,!1)))}disableScrollZoom(){if(!this.unlocked)return;this.unlocked=!1;const t=this.canvasNode;let e=["mousedown","mousemove","mouseup","wheel"];this.unlockable||e.push("dblclick"),"ontouchstart"in window&&(e=e.concat("touchstart","touchmove","touchend")),e.forEach((e=>t.removeEventListener(e,this,!1)))}destroy(){this.dropZone&&this.dropZone.destroy(),this.resizeObserver&&this.resizeObserver.disconnect(),window.removeEventListener("debouncedResize",this,!1),this.disableScrollZoom()}createDropZone(t){t=t||this.parent.getElementsByClassName("dropzone")[0];const e=this.setData.bind(this);this.dropZone=new P(t,e)}setSlicer(t){if(t&&t.modulation?this.slicer=t:this.data&&this.data.modulation?this.slicer=this.data:this.slicer=this.guess,!this.data.pulses||!this.data.pulses.length)return;const e=z(this.data.pulses,this.slicer);if(this.data.hints=e.hints,this.data.bits=e.bits,e.bits){const t=this.timingsNode,s=this.messagesNode;this.analyzer.print(t,s),console.log(e.bits.toHexString()),s&&(s.innerHTML+=`<div>Bits: <strong>${e.bits.toHexString()}</strong></div>`)}this.redrawCanvas()}setOption(t,e){return this[t]=this.constrain[t](e),this.processData()}setOptions(t){for(const e in t)this[e]=this.constrain[e](t[e]);return this.processData()}setData(t,e){t instanceof Blob?Q(t).then((e=>{this.data=this.parseData(e,t),this.processData()})):Array.isArray(t)?(this.data={pulses:t},this.processData()):"string"===typeof t?(this.data=this.parseData(t,e),this.processData()):t.pulses?(this.data=t,this.processData()):(this.data=new j(t),this.processData())}parseData(t,e={}){const s={name:e.name||null,type:e.type||null,size:e.size||t.length,lastModifiedDate:e.lastModifiedDate,lastModified:e.lastModified,pulses:[],format:"OOK",rate:25e4,scale:1},i=t.split("\n");for(const n of i){if(!n)continue;if(n.startsWith(";timescale")){s.timescale=n.slice(11);const t=parseFloat(s.timescale);s.timescale.endsWith("ns")?s.scale=.001*t:s.timescale.endsWith("us")?s.scale=t:s.timescale.endsWith("ms")?s.scale=1e3*t:s.timescale.endsWith("s")&&(s.scale=1e6*t)}if(n.startsWith(";created")&&(s.created=n.slice(9)),n.startsWith(";ook")&&(s.format="OOK"),n.startsWith(";fsk")&&(s.format="FSK"),n.startsWith(";freq1")&&(s.freq1=n.slice(7)),n.startsWith(";freq2")&&(s.freq2=n.slice(7)),n.startsWith(";samplerate")&&(s.rate=n.slice(12)),n.startsWith(";centerfreq")&&(s.centerfreq=n.slice(12)),n.startsWith(";sampledepth")&&(s.sampledepth=n.slice(13)),n.startsWith(";range")&&(s.range=n.slice(7)),n.startsWith(";rssi")&&(s.rssi=n.slice(6)),n.startsWith(";snr")&&(s.snr=n.slice(5)),n.startsWith(";noise")&&(s.noise=n.slice(7)),n.startsWith(";slicer")&&(s.slicer=n.slice(8)),n.startsWith(";"))continue;if(Y.isRfRaw(n)){const t=Y.getPulses(n);s.pulses=s.pulses.concat(t);continue}const t=n.split(" ");for(const e of t)if(e.length){const t=parseInt(e,10);s.pulses.push(t*s.scale)}}if(s.freq1=parseFloat(s.freq1),s.freq2=parseFloat(s.freq2),s.rate=parseFloat(s.rate),s.centerfreq=s.centerfreq&&parseFloat(s.centerfreq),s.sampledepth=s.sampledepth&&parseFloat(s.sampledepth),s.range=s.range&&parseFloat(s.range),s.rssi=s.rssi&&parseFloat(s.rssi),s.snr=s.snr&&parseFloat(s.snr),s.noise=s.noise&&parseFloat(s.noise),s.slicer){const t=s.slicer.split(":");s.modulation=t[0],s.short=t[1]&&parseFloat(t[1]),s.long=t[2]&&parseFloat(t[2]),s.sync=t[3]&&parseFloat(t[3]),s.gap=t[4]&&parseFloat(t[4])}return s}get canvasNode(){return this.parent.getElementsByClassName("pulseplot-canvas")[0]||this.parent.getElementsByTagName("canvas")[0]}get fileinfoNode(){return this.parent.getElementsByClassName("pulseplot-fileinfo")[0]||this.parent.getElementsByClassName("fileinfo")[0]}get timingsNode(){return this.parent.getElementsByClassName("pulseplot-timings")[0]}get messagesNode(){return this.parent.getElementsByClassName("pulseplot-messages")[0]}buildInfo(){if(!this.renderInfo&&!this.fileinfoNode)return;const t=this.data||{},e=t.format,s=t.rate,i=_(s,10),n=t.width/1e6,l=k(n,10),h=t.width/1e6*s,o=t.pulses||[],a=t.lastModifiedDate||new Date(t.lastModified||0),r=[];if(r.push({text:"File name",value:D(t.name)}),r.push({text:"File type",value:t.type||"n/a"}),r.push({text:"File size",value:`${t.size} bytes`}),r.push({text:"Last modified",value:a.toISOString()}),r.push({text:"Sample format",value:e}),r.push({text:"No. of samples",value:`${h.toFixed(0)} S`}),s>1&&r.push({text:"Sample rate",value:`${s/i.scale}${i.prefix}`}),r.push({text:"No. of pulses",value:o.length/2+" ×"}),s>1&&r.push({text:"Length (time)",value:`${(n/l.scale).toFixed(2)} ${l.prefix}`}),this.renderInfo)this.renderInfo(r);else{let t="";for(const s of r)t+=`<span title="${s.text}">${s.value}</span>`;const e=this.fileinfoNode;e.innerHTML=t}}handleEvent(t){const e=t.type;if("function"===typeof this[e])return this[e](t)}wheel(t){let e=!1;t.deltaX&&(this.scroll+=10*t.deltaX,e=!0);const s=.5,i=this.data.width/this.width*10>2e3?2e3:this.data.width/this.width*10;let n;if(t.deltaY<0){const e=t.deltaY<-10?-10:t.deltaY;n=this.zoom*(1+-.2*e)}else{const e=t.deltaY>10?10:t.deltaY;n=this.zoom/(1+.2*e)}n<s&&(n=s),n>i&&(n=i),this.zoom!==n&&(this.scroll=(this.scroll+t.layerX)/this.zoom*n-t.layerX,this.zoom=n,e=!0),e&&this.redrawCanvas(),t.preventDefault()}dblclick(t){this.unlockable&&!this.unlocked?this.enableScrollZoom():this.unlockable&&this.unlocked?this.disableScrollZoom():1===this.zoom&&0===this.scroll||(this.scroll=0,this.zoom=1,this.redrawCanvas()),t.preventDefault()}mousedown(t){this.dragX=t.offsetX,this.dragY=t.offsetY,this.dragOrig=this.scroll,this.isDrag=!0,t.preventDefault()}mouseup(t){this.isDrag=!1,t.preventDefault()}mousemove(t){this.isDrag&&(this.redrawScroll(this.dragX-t.offsetX,this.dragY-t.offsetY),t.stopPropagation(),t.preventDefault())}touchstart(t){const e=t.target.getBoundingClientRect(),s=t.targetTouches[0],i=s.clientX-e.left,n=s.clientY-e.top;this.dragX=i,this.dragY=n,this.dragOrig=this.scroll,this.isDrag=!0,t.targetTouches.length>1&&t.preventDefault()}touchcancel(t){t.targetTouches.length<1&&(this.isDrag=!1,this.dragZoom=!1)}touchend(t){t.targetTouches.length<1&&(this.isDrag=!1,this.dragZoom=!1)}touchmove(t){const e=t.target.getBoundingClientRect(),s=t.targetTouches[0];if(this.dragZoom||1!==t.targetTouches.length){if(2===t.targetTouches.length){this.isDrag=!1;const e=t.targetTouches[1],i=s.clientX<e.clientX?e.clientX-s.clientX:s.clientX-e.clientX;this.dragZoom||(this.dragZoom=this.zoom,this.dragDist=i);const n=(s.clientX+e.clientX)/2,l=i/this.dragDist,h=this.dragZoom*l;this.scroll=(this.scroll+n)/this.zoom*h-n,this.zoom=h,this.redrawCanvas(),t.preventDefault()}}else{const t=s.clientX-e.left,i=s.clientY-e.top;this.redrawScroll(this.dragX-t,this.dragY-i)}t.stopPropagation()}debouncedResize(){this.width=this.opts.width||this.parent.clientWidth,this.drawCanvas()}processData(){if(!this.data.pulses||!this.data.pulses.length)return;let t=0;for(let l=0;l<this.data.pulses.length;++l)t+=this.data.pulses[l];this.data.width=t;const e=this.timingsNode,s=this.messagesNode,i=new E(this.data.pulses);i.console_log(),i.print(e,s),this.analyzer=i,this.guess=i.guess(),this.slicer||(this.data.modulation?this.slicer=this.data:this.slicer=this.guess);const n=z(this.data.pulses,this.slicer);this.data.hints=n.hints,this.data.bits=n.bits,n.bits&&(console.log(n.bits.toHexString()),s&&(s.innerHTML+=`<div>Bits: <strong>${n.bits.toHexString()}</strong></div>`)),this.buildInfo(),this.drawCanvas()}redrawScroll(t){this.scroll=this.dragOrig+t,this.redrawCanvas()}redrawCanvas(){window.requestAnimationFrame(this.drawCanvas.bind(this))}drawCanvas(){this.width=this.opts.width||this.parent.clientWidth;const t=this.width,e=this.height,s=this.canvasNode;s.width=t,s.height=e;const i=s.getContext("2d",{alpha:!1,desynchronized:!0});this.scroll<=-10?this.scroll=-10:this.scroll>t*this.zoom&&(this.scroll=t*this.zoom);const n=-this.scroll,l=t*this.zoom/this.data.width,h=this.yHi+.5,o=this.yLo+.5;i.fillStyle="#ffffff",i.fillRect(0,0,s.width,s.height),i.font=this.theme.font;const a=i.measureText("8"),r=a.width,u=a.actualBoundingBoxAscent+a.actualBoundingBoxDescent,p=this.data.width/1e6/this.zoom,d=n/t*p,c=_(p,10),m=p/c.scale,g=d/c.scale;i.fillStyle=this.theme.timeLabelFill,i.fillText(`t[${c.prefix}s]`,32,u),this.data.time&&i.fillText(`${this.data.time}`,100,u),(this.data.format||this.data.mod)&&i.fillText(`${(this.data.format||this.data.mod).toUpperCase()}`,300,u),this.data.pulses&&i.fillText(this.data.pulses.length/2+" pulses",330,u);const f=this.data.rate_Hz||this.data.samplerate_Hz||this.data.rate||this.data.samplerate;if(f){const t=_(f,10);i.fillText(`${f/t.scale} ${t.prefix}Hz`,400,u)}const b=this.data.freq_Hz||this.data.centerfreq_Hz||this.data.centerfreq,w=this.data.freq1_Hz||this.data.freq1;if(w){const t=_(w,10);i.fillText(`${(w/t.scale).toFixed(3)} ${t.prefix}Hz`,500,u)}if(b&&w){i.fillStyle=this.theme.timeMinorFill,i.fillRect(700,~~(u/2),100,1),i.fillStyle=this.theme.timeLabelFill;const t=100*(w-this.data.freq_Hz)/f+50;i.lineWidth=this.theme.hiLine,i.strokeStyle=this.theme.hiStroke,i.beginPath(),i.moveTo(700+t,0),i.lineTo(700+t,u),i.stroke()}const y=this.data.freq2_Hz||this.data.freq2;if(y){const t=_(y,10);i.fillText(`${(y/t.scale).toFixed(3)} ${t.prefix}Hz`,600,u)}if(b&&y){const t=100*(y-this.data.freq_Hz)/f+50;i.lineWidth=this.theme.loLine,i.strokeStyle=this.theme.loStroke,i.beginPath(),i.moveTo(700+t,0),i.lineTo(700+t,u),i.stroke()}const x=this.data.range_dB||this.data.range||66,v=this.data.rssi_dB||this.data.rssi,M=this.data.snr_dB||this.data.snr,k=this.data.noise_dB||this.data.noise;v&&M&&k&&(i.lineWidth=1,i.strokeStyle=this.theme.loStroke,i.beginPath(),i.moveTo(900,u),i.lineTo(1e3,u),i.stroke(),i.lineWidth=this.theme.hiLine,i.strokeStyle=this.theme.hiStroke,i.beginPath(),i.moveTo(1e3+100*k/x,u),i.lineTo(1e3+100*v/x,u),i.stroke(),i.fillText(`RSSI ${k.toFixed(1)} ${M.toFixed(1)} ${v.toFixed(1)} dB`,900,u));const S=t/85;let F=m/S;F=5*~~(F/5),F<1&&(F=1);const D=t/m,P=18;i.fillStyle=this.theme.timeMinorFill;for(let _=g;_<m;_+=F/5){_>=m-F&&(_=m);const t=~~(_*D);i.fillRect(t,P+10,1,5)}i.fillStyle=this.theme.timeMajorFill;for(let _=g;_<m;_+=F){_>=m-F&&(_=m);const t=~~(_*D);i.fillRect(t,P+5,1,10);const e=(_-g).toFixed(0);let s=t-3*e.length;_>=m&&(s=t-6*r),i.fillText(e,s,20)}let W;i.lineWidth=this.theme.hintLine,i.strokeStyle=this.theme.hintStroke,i.setLineDash(this.theme.hintDash),i.beginPath();for(let _=0;this.data.hints&&_<this.data.hints.length;_+=1){const e=this.data.hints[_],s=e[0]*l+n,h=e[1]*l+n;W!==s&&s>=0&&s<t&&(i.moveTo(~~s-.5,this.yHintLo-.5),i.lineTo(~~s-.5,this.yHintHi+.5)),h>=0&&h<t&&(i.moveTo(~~h-.5,this.yHintLo-.5),i.lineTo(~~h-.5,this.yHintHi+.5)),W=h}i.stroke(),i.setLineDash([]),i.lineWidth=this.theme.hintAltLine,i.strokeStyle=this.theme.hintAltStroke,i.setLineDash(this.theme.hintAltDash),i.beginPath(),W=null;for(let _=0;this.data.hints&&_<this.data.hints.length;_+=1){const e=this.data.hints[_],s=e[0]*l+n,h=e[1]*l+n;W!==s&&(W&&W>=0&&W<t&&(i.moveTo(~~W-.5,this.yHintLo-.5),i.lineTo(~~W-.5,this.yHintHi+.5)),s>=0&&s<t&&(i.moveTo(~~s-.5,this.yHintLo-.5),i.lineTo(~~s-.5,this.yHintHi+.5))),W=h}i.stroke(),i.setLineDash([]),i.fillStyle=this.theme.hintFill,i.beginPath();for(let _=0;this.data.hints&&_<this.data.hints.length;_+=1){const e=this.data.hints[_],s=e[0]*l+n,h=e[1]*l+n,o=e[2],a=h-s;if(a>r){const e=s+a/2;e>=0&&e<t&&i.fillText(o,e-5,this.yHintText)}}if(i.stroke(),!this.data.pulses||!this.data.pulses.length)return;let B=this.data.pulses,L=1;if(this.data.pulses.length>this.width){B=[],L=Math.ceil(this.data.pulses.length/this.width);for(let t=0;t<this.width;t++)B.push(this.data.pulses[t*L])}let T=n;i.lineWidth=this.theme.hiLine,i.strokeStyle=this.theme.hiStroke,i.setLineDash(this.theme.hiDash),i.fillStyle=this.theme.hiFill,i.beginPath();for(let _=0;_<B.length;_+=2){const e=T;T+=B[_]*l*L,(e>=0&&e<t||T>=0&&T<t||e<0&&T>t)&&(i.fillRect(~~e,h,~~(T-e),o-h),i.moveTo(~~e-1,h),i.lineTo(0+~~T,h)),T+=B[_+1]*l*L}i.stroke(),T=n,i.lineWidth=this.theme.loLine,i.strokeStyle=this.theme.loStroke,i.setLineDash(this.theme.loDash),i.fillStyle=this.theme.loFill,i.beginPath();for(let _=0;_<this.data.pulses.length;_+=2){T+=B[_]*l*L;const e=T;T+=B[_+1]*l*L,(e>=0&&e<t||T>=0&&T<t||e<0&&T>t)&&(i.fillRect(~~e,h,~~(T-e),o-h),i.moveTo(~~e-1,o),i.lineTo(0+~~T,o))}i.stroke(),T=n,i.lineWidth=this.theme.edgeLine,i.strokeStyle=this.theme.edgeStroke,i.setLineDash(this.theme.edgeDash),i.beginPath();for(let _=0;_<B.length;_+=1)T>=0&&T<t&&(i.moveTo(~~T-.5,o-.5),i.lineTo(~~T-.5,h+.5)),T+=B[_]*l*L;i.stroke(),T=n,i.fillStyle=this.theme.textFill;const C=h+(o-h+u)/2;for(let _=0;_<B.length;_+=1){const e=B[_],s=e*l*L;if(s>30){const n=T+s/2;n>=0&&n<t&&i.fillText(e,n-10,C)}T+=s}const E=1e6/this.data.rate*l;if(T=n,E>2){const e=E>4?2:1;i.fillStyle=this.theme.dotFill;for(let s=0;s<this.data.pulses.length;s+=2){const n=this.data.pulses[s]*l;for(let s=0;s<n-E;s+=E){const n=~~(T+s);n>=0&&n<t&&i.fillRect(n,h+.5,e,3)}T+=n;const a=this.data.pulses[s+1]*l;for(let s=0;s<a-E;s+=E){const n=~~(T+s);n>=0&&n<t&&i.fillRect(n,o-3.5,e,3)}T+=a}}}}const nt=(0,i.aZ)({name:"Pulseplot",props:{passedFile:Object},setup(){return{flags:(0,x.iH)({wrongFileType:!1}),uploadedFile:(0,x.iH)(null),plot:(0,x.iH)(null),data:(0,x.iH)(null),signals:(0,x.iH)(null),currentSignal:(0,x.iH)(null),slicer:(0,x.iH)({long:0,modulation:"",short:0,sync:0,gap:0}),slicerModulations:["PCM","PWM","PPM","MC","DM","NRZI","CMI","PIWM"]}},watch:{uploadedFile(t,e){this.plot&&this.plot.destroy(),this.flags.wrongFileType=!1,this.signals=null,this.currentSignal=null,this.switchFiletype(t)},currentSignal(t,e){t&&(this.plot&&this.plot.destroy(),this.data={centerfreq_Hz:t.frequency,pulses:t.data},this.draw())}},methods:{async switchFiletype(t,e){let s;s=e?t:await t.arrayBuffer();const i=(new TextDecoder).decode(s).split(/\r?\n/);switch(i[0]){case"Filetype: Flipper SubGhz RAW File":return this.processSubGhz(i);case"Filetype: IR signals file":return this.processIr(i);default:this.flags.wrongFileType=!0;break}},processSubGhz(t){let e,s="";for(const i of t)if(i.startsWith("Frequency"))e=i.split(" ")[1];else if(i.startsWith("RAW_Data")){let t=i.replaceAll("RAW_Data: "," ");const e=t.match(/(\s\d+\s\d+)|(\s-\d+\s-\d+)/g);if(e)for(const s of e){const e=s.trim().split(" ");e[1].startsWith("-")?e.splice(1,0,"1"):e.splice(1,0,"-1"),t=t.replace(s," "+e.join(" ")),console.log(`Fixed deviation:${s} ->${" "+e.join(" ")}`)}s+=t}s=s.trim(),s.startsWith("-")&&(s="0 "+s),s=s.replaceAll("-","").split(" "),s=s.map((t=>Number(t))),this.data={centerfreq_Hz:e,pulses:s},this.draw()},processIr(t){let e=[],s=-1;for(const i of t)i.startsWith("#")?(s++,e[s]={}):i.startsWith("name")?e[s].name=i.split(" ")[1]:i.startsWith("type")?e[s].type=i.split(" ")[1]:i.startsWith("frequency")?e[s].frequency=i.split(" ")[1]:i.startsWith("data")&&(e[s].data=i.split(": ")[1]);if(e=e.filter((t=>"raw"===t.type)),0!==e.length){for(const t of e)t.data=t.data.split(" "),t.data=t.data.map((t=>Number(t)));this.signals=e,this.currentSignal=e[0]}else this.flags.wrongFileType=!0},draw(){this.plot=new it({parent:".pulseplot",data:this.data,height:300}),this.plot.enableScrollZoom(),"No clue..."!==this.plot.slicer.name&&this.plot.slicer.modulation&&(this.slicer.modulation=this.plot.slicer.modulation,this.slicer.short=this.plot.slicer.short||0,this.slicer.long=this.plot.slicer.long||0,this.slicer.sync=this.plot.slicer.sync||0,this.slicer.gap=this.plot.slicer.gap||0,this.setSlicer())},setSlicer(){this.plot.setSlicer(this.slicer)}},mounted(){this.passedFile&&this.switchFiletype(this.passedFile.data,!0)}});var lt=s(1639),ht=s(9885),ot=s(3837),at=s(2857),rt=s(6997),ut=s(3119),pt=s(4455),dt=s(9984),ct=s.n(dt);const mt=(0,lt.Z)(nt,[["render",y]]),gt=mt;ct()(nt,"components",{QPage:ht.Z,QFile:ot.Z,QIcon:at.Z,QSelect:rt.Z,QInput:ut.Z,QBtn:pt.Z})}}]);