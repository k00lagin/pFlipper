"use strict";(self["webpackChunkmy_flipper_net"]=self["webpackChunkmy_flipper_net"]||[]).push([[360],{6360:(e,t,s)=>{s.r(t),s.d(t,{default:()=>$});var r=s(9835),a=s(6970),n=s(1957),i=s(9759),c=s.n(i);const l=e=>((0,r.dD)("data-v-5f744aec"),e=e(),(0,r.Cn)(),e),o={class:"toolbar flex no-wrap q-pa-xs"},p=l((()=>(0,r._)("i",{class:"q-icon notranslate material-icons","aria-hidden":"true",role:"presentation"},"arrow_back_ios_new",-1))),h={class:"device-name"},u={class:"flex-center column"},d={class:"device-screen column"},g={class:"flex"},f={class:"column items-center"},m=["width","height"],_={key:0,src:c()},S={key:0,class:"flex-center column q-my-xl"},v=l((()=>(0,r._)("p",null,"Waiting for Flipper...",-1)));function E(e,t,s,i,c,l){const E=(0,r.up)("router-link"),C=(0,r.up)("q-spinner"),b=(0,r.up)("q-page");return(0,r.wg)(),(0,r.j4)(b,{class:"flex-center column"},{default:(0,r.w5)((()=>[(0,r._)("div",o,[(0,r.Wm)(E,{class:"toolbar__back",to:"/"},{default:(0,r.w5)((()=>[p])),_:1}),(0,r._)("h5",h,(0,a.zw)(e.info.hardware_name),1)]),(0,r._)("div",u,[(0,r.wy)((0,r._)("div",d,[(0,r._)("div",g,[(0,r._)("div",f,[(0,r._)("div",{class:(0,a.C_)(["flipper","1"===e.info.hardware_color?"body-black":"body-white"])},[(0,r.wy)((0,r._)("canvas",{width:128*e.screenScale,height:64*e.screenScale,style:{"image-rendering":"pixelated"},ref:"screenStreamCanvas"},null,8,m),[[n.F8,e.flags.screenStream]]),e.flags.updateInProgress?((0,r.wg)(),(0,r.iD)("img",_)):(0,r.kq)("",!0),(0,r._)("button",{class:"control control-up",onClick:t[0]||(t[0]=()=>e.handleControl(0)),type:"button"}),(0,r._)("button",{class:"control control-down",onClick:t[1]||(t[1]=()=>e.handleControl(1)),type:"button"}),(0,r._)("button",{class:"control control-right",onClick:t[2]||(t[2]=()=>e.handleControl(2)),type:"button"}),(0,r._)("button",{class:"control control-left",onClick:t[3]||(t[3]=()=>e.handleControl(3)),type:"button"}),(0,r._)("button",{class:"control control-ok",onClick:t[4]||(t[4]=()=>e.handleControl(4)),type:"button"}),(0,r._)("button",{class:"control control-back",onClick:t[5]||(t[5]=()=>e.handleControl(5)),type:"button"})],2)])])],512),[[n.F8,e.flags.updateInProgress||e.connected&&null!==e.info&&this.info.storage_databases_present&&e.flags.rpcActive&&e.info.hardware_name]]),e.flags.updateInProgress||e.connected&&null!=e.info&&e.flags.rpcActive&&!e.flags.rpcToggling?(0,r.kq)("",!0):((0,r.wg)(),(0,r.iD)("div",S,[(0,r.Wm)(C,{color:"primary",size:"3em",class:"q-mb-md"}),v]))])])),_:1})}s(6822),s(4110),s(8727),s(2166);var C=s(499),b=s(5186),w=s(1949),R=s.n(w);const y=(0,r.aZ)({name:"PageDevice",props:{flipper:Object,connected:Boolean,rpcActive:Boolean,info:Object,installFromFile:Boolean},components:{},setup(){return{flags:(0,C.iH)({restarting:!1,rpcActive:!1,rpcToggling:!1,screenStream:!1,updateInProgress:!1}),screenScale:(0,C.iH)(2),channels:(0,C.iH)({})}},computed:{radioStackType(){switch(parseInt(this.info.radio_stack_type)){case 1:return"full";case 2:return"BLE_HCI";case 3:return"light";case 4:return"BLE_BEACON";case 5:return"BLE_BASIC";case 6:return"BLE_FULL_EXT_ADV";case 7:return"BLE_HCI_EXT_ADV";case 16:return"THREAD_FTD";case 17:return"THREAD_MTD";case 48:return"ZIGBEE_FFD";case 49:return"ZIGBEE_RFD";case 64:return"MAC";case 80:return"BLE_THREAD_FTD_STATIC";case 81:return"BLE_THREAD_FTD_DYAMIC";case 96:return"802154_LLD_TESTS";case 97:return"802154_PHY_VALID";case 98:return"BLE_PHY_VALID";case 99:return"BLE_LLD_TESTS";case 100:return"BLE_RLV";case 101:return"802154_RLV";case 112:return"BLE_ZIGBEE_FFD_STATIC";case 113:return"BLE_ZIGBEE_RFD_STATIC";case 120:return"BLE_ZIGBEE_FFD_DYNAMIC";case 121:return"BLE_ZIGBEE_RFD_DYNAMIC";case 128:return"RLV";case 144:return"BLE_MAC_STATIC";default:return this.info.radio_stack_type}}},watch:{async info(e,t){null!==e&&e.storage_databases_present&&this.connected&&await this.start()}},methods:{async startRpc(){this.flags.rpcToggling=!0;const e=await this.flipper.commands.startRpcSession(this.flipper);if(!e.resolved||e.error)throw this.$emit("showNotif",{message:"Unable to start RPC session. Reload the page or reconnect Flipper manually.",color:"negative",reloadBtn:!0}),this.$emit("log",{level:"error",message:"Device: Couldn't start rpc session"}),new Error("Couldn't start rpc session");this.flags.rpcActive=!0,this.flags.rpcToggling=!1,this.$emit("setRpcStatus",!0),this.$emit("log",{level:"info",message:"Device: RPC started"})},async stopRpc(){this.flags.rpcToggling=!0,await this.flipper.commands.stopRpcSession(),this.flags.rpcActive=!1,this.flags.rpcToggling=!1,this.$emit("setRpcStatus",!1),this.$emit("log",{level:"info",message:"Device: RPC stopped"})},async restartRpc(e){if(this.connected&&this.flags.rpcActive&&!this.flags.restarting||e)return this.flags.restarting=!0,await this.flipper.closeReader(),await(0,b.Z)(300),await this.flipper.disconnect(),await(0,b.Z)(300),await this.flipper.connect(),await this.startRpc(),this.$emit("log",{level:"info",message:"Device: Restarted RPC"}),this.startScreenStream()},async handleControl(e){await this.flipper.commands.gui.sendInputEvent(e,0).catch((e=>this.rpcErrorHandler(e,"gui.sendInputEvent"))),await this.flipper.commands.gui.sendInputEvent(e,2).catch((e=>this.rpcErrorHandler(e,"gui.sendInputEvent"))),await this.flipper.commands.gui.sendInputEvent(e,1).catch((e=>this.rpcErrorHandler(e,"gui.sendInputEvent")))},async startScreenStream(){await this.flipper.commands.gui.startScreenStreamRequest().catch((e=>this.rpcErrorHandler(e,"gui.startScreenStreamRequest"))).finally((()=>{this.$emit("log",{level:"debug",message:"Device: gui.startScreenStreamRequest: OK"})})),this.flags.screenStream=!0;const e=this.$refs.screenStreamCanvas.getContext("2d");e.lineWidth=1,e.lineCap="square",e.imageSmoothingEnabled=!1,e.fillStyle="#fe8a2b",e.fillRect(0,0,128*this.screenScale,64*this.screenScale),e.fillStyle="black";const t=this.flipper.emitter.on("screen frame",(s=>{for(let t=0;t<128;t++)for(let r=0;r<64;r++){const a=128*Math.floor(r/8)+t,n=7&r;s.at(a)&1<<n?(e.fillStyle="black",e.fillRect(t*this.screenScale,r*this.screenScale,1*this.screenScale,1*this.screenScale)):(e.fillStyle="#fe8a2b",e.fillRect(t*this.screenScale,r*this.screenScale,1*this.screenScale,1*this.screenScale))}const r=this.flipper.emitter.on("stop screen streaming",(()=>{this.flags.screenStream=!1,t(),r()}))}));this.unbindRestart=this.flipper.emitter.on("restart session",(()=>(this.flags.screenStream=!1,this.unbindRestart(),this.restartRpc())))},async stopScreenStream(){await this.flipper.commands.gui.stopScreenStreamRequest().catch((e=>this.rpcErrorHandler(e,"gui.stopScreenStreamRequest"))).finally((()=>{this.$emit("log",{level:"debug",message:"Device: gui.stopScreenStreamRequest: OK"})})),this.flags.screenStream=!1},onUpdateStage(e){this.$emit("update",e),"start"===e?(this.flags.updateInProgress=!0,this.stopScreenStream()):"end"===e&&(this.flags.updateInProgress=!1,this.startScreenStream())},passNotif(e){this.$emit("showNotif",e)},passLog(e){this.$emit("log",e)},rpcErrorHandler(e,t){e=e.toString(),this.$emit("showNotif",{message:`RPC error in command '${t}': ${e}`,color:"negative"}),this.$emit("log",{level:"error",message:`Device: RPC error in command '${t}': ${e}`})},async start(){this.flags.rpcActive=this.rpcActive,this.rpcActive||(setTimeout((()=>{if(!this.rpcActive)return this.restartRpc(!0)}),1e3),await this.startRpc()),this.flags.screenStream||await this.startScreenStream()}},async mounted(){R().bind("up",(()=>this.handleControl(0))),R().bind("down",(()=>this.handleControl(1))),R().bind("right",(()=>this.handleControl(2))),R().bind("left",(()=>this.handleControl(3))),R().bind(["space","enter"],(()=>this.handleControl(4))),R().bind("backspace",(()=>this.handleControl(5))),this.connected&&null!==this.info&&this.info.storage_databases_present&&await this.start(),navigator.serial.addEventListener("disconnect",(e=>{this.flags.rpcActive=!1,this.flags.rpcToggling=!1,this.$emit("setRpcStatus",!1),this.flags.screenStream=!1}))},async beforeUnmount(){this.unbindRestart(),await this.stopScreenStream(),await(0,b.Z)(3e3)}});var D=s(1639),I=s(9885),A=s(2857),T=s(3940),L=s(9984),B=s.n(L);const k=(0,D.Z)(y,[["render",E],["__scopeId","data-v-5f744aec"]]),$=k;B()(y,"components",{QPage:I.Z,QIcon:A.Z,QSpinner:T.Z})}}]);